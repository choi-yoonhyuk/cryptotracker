{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","a","fetch","response","json","coinId","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","Chart","useRecoilValue","useQuery","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","comeupAnimation","keyframes","Container","styled","div","Overview","main","Tag","h3","Value","Text","props","isPositive","checkValue","Price","tickersData","useState","setData","loading","setLoading","useEffect","quotes","USD","market_cap_change_24h","percent_change_30m","percent_change_1h","percent_change_12h","percent_change_24h","Title","h1","accentColor","Loader","span","Header","header","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","BackBtn","button","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","cardBgColor","Img","img","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","Coins","setDarkAtom","useSetRecoilState","id","onClick","prev","htmlFor","slice","coin","pathname","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","isDark","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.2f3858e2.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  const response = await fetch(`${BASE_URL}/coins`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function fetchCoinInfo(coinId: string) {\n  const response = await fetch(`${BASE_URL}/coins/${coinId}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function fetchCoinTickers(coinId: string) {\n  const response = await fetch(`${BASE_URL}/tickers/${coinId}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 14; // 2 weeks\n  const response = await fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  );\n  const json = await response.json();\n  return json;\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const isDark = useRecoilValue(isDarkAtom);\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst comeupAnimation = keyframes`\n  0% {\n    transform: none;\n    opacity: 0;\n  }\n  1% {\n    transform: translateY(-5px);\n    opacity: 0;\n  }\n  100% {\n    transform: none;\n    opacity: 1;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  main:first-child {\n    animation-delay: 0.2s;\n  }\n  main:nth-child(2) {\n    animation-delay: 0.4s;\n  }\n  main:nth-child(3) {\n    animation-delay: 0.6s;\n  }\n  main:nth-child(4) {\n    animation-delay: 0.8s;\n  }\n  main:nth-child(5) {\n    animation-delay: 1s;\n  }\n  main:last-child {\n    animation-delay: 1.2s;\n  }\n`;\n\nconst Overview = styled.main`\n  width: 100%;\n  height: 50px;\n  background-color: white;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 15px;\n  margin: 10px 0;\n  padding: 20px;\n  transform: translateY(-5px);\n  opacity: 0;\n  animation: ${comeupAnimation} 0.5s linear forwards;\n`;\n\nconst Tag = styled.h3`\n  width: 50%;\n  color: black;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nconst Value = styled.div`\n  width: 50%;\n`;\n\nconst Text = styled.h3<{ isPositive?: Boolean }>`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isPositive ? \"lightgreen\" : \"red\")};\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface PriceProps {\n  coinId: string;\n  tickersData?: PriceData;\n}\nfunction checkValue(value: number | undefined) {\n  if (value) {\n    return value > 0;\n  }\n}\nfunction Price({ coinId, tickersData }: PriceProps) {\n  const [data, setData] = useState<PriceData>();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setData(tickersData);\n    setLoading(false);\n  }, [coinId, tickersData]);\n\n  return (\n    <Container>\n      {loading ? (\n        \"Loading Price...\"\n      ) : (\n        <>\n          <Overview>\n            <Tag>Price :</Tag>\n            <Value>\n              <Text isPositive={true}>\n                $ {data?.quotes.USD.price.toFixed(3)}\n              </Text>\n            </Value>\n          </Overview>\n          <Overview>\n            <Tag> Max Change rate in last 24h:</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.market_cap_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.market_cap_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 30 Minutes):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_30m) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_30m} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 1 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_1h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_1h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 12 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_12h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_12h} %\n              </Text>\n            </Value>\n          </Overview>\n\n          <Overview>\n            <Tag> Change rate (last 24 hours):</Tag>\n            <Value>\n              <Text\n                isPositive={\n                  checkValue(data?.quotes.USD.percent_change_24h) === true\n                }\n              >\n                {data?.quotes.USD.percent_change_24h} %\n              </Text>\n            </Value>\n          </Overview>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Price;","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  useLocation,\n  useParams,\n  Route,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\nconst BackBtn = styled.button`\n  margin-left: 390px;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  background-color: #7f8c8d;\n  color: white;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface ICoinProps {}\n\nconst Coin = ({}: ICoinProps) => {\n  // const [loading, setLoading] = useState(true);\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Link to=\"/\">\n            <BackBtn>Home</BackBtn>\n          </Link>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>{infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} tickersData={tickersData} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Coin;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  background-color: ${(props) => props.theme.cardBgColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  border: 1px solid white;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\nconst Btn = styled.button``;\n\nconst CheckBoxWrapper = styled.div`\n  position: relative;\n  margin-left: 60px;\n`;\nconst CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 42px;\n  height: 26px;\n  border-radius: 15px;\n  background: #bebebe;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    margin: 3px;\n    background: #ffffff;\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n    transition: 0.2s;\n  }\n`;\nconst CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 20px;\n  height: 15px;\n  &:checked + ${CheckBoxLabel} {\n    background: #a29bfe;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin-left: 21px;\n      transition: 0.2s;\n    }\n  }\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface ICoinsProps {}\n\nfunction Coins() {\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n  return (\n    <Container>\n      <Helmet>\n        <title>Coin (Top100)</title>\n      </Helmet>\n      <Header>\n        <Title>Coin (Top100)</Title>\n        <CheckBoxWrapper>\n          <CheckBox id=\"checkbox\" type=\"checkbox\" onClick={toggleDarkAtom} />\n          <CheckBoxLabel htmlFor=\"checkbox\" />\n        </CheckBoxWrapper>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name, rank: coin.rank },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps {}\n\nconst Router = ({}: IRouterProps) => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"white\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  font-weight: 300;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={false} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}